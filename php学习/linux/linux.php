linux 分 内核版本 和发行版本
linux 内核官网 www.kernel.org
内核版本说明 2.6.18 2表示主版本 6 表示次版本 18表示末版本
1.swap交换分区(已经成为过去式):把硬盘的一部分开辟出来当做内存使用,swap的大小建议是内存的2倍，系统运行时会把内存不常用的数据放到swap中
2.创建分区 挂载点 /boot 类似于winndow a b c d  盘符 （boot 一般属于系统启动目录 最好分离出来 保证系统的正常启动 200kb就够了）
  文件系统类型  ext4 类似win系统的FAT32或NTFS类型
4.操作指令
mkdir ：创建一个新的目录。
cp ：复制文件/重命名文件。
mv ：移动文件。
find和locate：搜索文件。
kill：快速关闭一个进程。
passwd：更改密码。
md5sum ：计算和检验MD5信息签名
history：查询历史记录命令。
sudo ：(super user do)命令允许授权用户执行超级用户或者其它用户的命令。
touch：创建一个新文件，或者将文件的访问和修改时间更新为当前时间。
chmod：修改文件的访问权限。
chown ：改变文件拥有者和所在用户组。
apt：APT是一个为Debian系列系统（Ubuntu，Kubuntu等等）开发的高级包管理器，在Gnu/Linux系统上，它会为包自动智能地搜索、安装、升级以及解决依赖问题。
 pwd   查看当前位置的目录
 ls    查看目录里边的文件内容
 ls -l 显示文件的详细信息     //简写 ll
 ls -al 显示文件的详细信息(包括隐藏文件)
 ls -a 显示文件目录全部文件(包括隐藏文件)
 cd 目录切换
 su -  切换
 普通用户是 #  当前应该是超级用户



应用领域
1.企业服务器
2.嵌入式应用
www.netraft.com  查看后台是什么的服务器都可以

linux 与 windows的不同
1.linux严格区分大小写
2.linux中所有内容以文件形式保存,包括硬件 一切内容皆文件
3.linux没有扩展名，但是有约定好的文件类型,给管理员看的,它是靠权限来 区分的
  a.压缩包:"*.gz","*.bz2",".tar.bz2",".tgz"等
  b.二进制软件包：".rpm",
  c.网页文件:"*.html","*.php"
  d.脚本文件:"*.sh"
  e.配置文件:"*.conf"
4.windows下的程序不能直接在linux中安装和运行
5.字符界面的优势
 a.字符界面占用 的系统资源更少
 b.字符界面减少了出错,被攻击 的

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			linux 常用命令
			1.命令的基本格式
			linux下root是管理员
			[root@localhost~]#
			其中:
			root:      当前登录用户
			localhost  主机名
			~          当前所在目录
			#          超级用户提示符
			                      普通用户提示符$

			命令格式
			命令 [选项] [参数]
			注意:个别命令使用不遵循此格式
			当有多个选项时，可以写在一起
			简化选项与完整选项
			  -a 等于 --a
			查询目录中内容：ls
			ls [选项] [文件或目录]
			选项：
			-a    显示所有文件，包括隐藏文件
			-l    显示详细信息
			-d    查看目录属性
			-h    人性化显示文件大小
			-i    显示inode
	-rw-r--r--.
		文件类型 ( -文件 d 目录 l 软链接文件)
		rw-         r--         r--
		u所有者         g所属组            o其他人
		r读 w写 x执行
		. 代表acl权限

一 目录处理命令
.mkdir -p [目录名]
 -p 递归创建

 切换目录
 cd ~   进入当前用户的家目录
 cd
 cd -   进入上次目录
 cd ..  进入上一级目录
 cd .   进入当前目录

 ctrl+l  清屏
 按table键可以进行目录补全和命令补全
 rmdir[目录名] 删除空目录                           --remove empty directoories
 rm -rf[文件或目录]                   --remove
 -r 删除目录   -f 强制
 cp [选项] [原文件或目录] [目标目录]   --copy
 -r  复制目录
 -p  连带文件属性复制
 -d  若源文件是链接文件,则复制链接属性
 -a  相当于 -pdr

 mv [原文件或目录][目标目录]剪切或者改名   -move

  常用目录的作用
  /       根目录
  /bin    命令保存目录(普通用户就可以读取的命令)
  /boot   启动目录,启动相关文件
  /dev    设备文件保存目录
  /etc    配置文件保存目录
  /home   普通用户的家目录
  /lib    系统库保存目录
  /mnt    系统挂载目录
  /media  挂载目录
  /root   超级用户的家目录
  /tmp    临时目录
  /sbin   命令保存目录(超级用户才能读取的命令)
  /proc   直接写入内存的
  /sys                     proc 与 sys 有点类似 不能直接操作，它保存的是内存的过载点
  /usr    系统软件资源目录
      /usr/bin/系统命令(普通用户)
      /usr/sbin/系统命令(超级用户)
 /var      系统相关文档内容

 链接命令:ln
 ln -s [原文件][目标文件]       --link
 功能描述：        生成链接文件
 选项        : -s  创建软链接

 硬链接特征
 1.拥有相同的i节点和存储block块，可以看做是同一个文件
 2.可通过i节点识别
 3.不能跨分区
 4.不能针对目录使用
 不太建议创建硬链接

 软链接特征
 1.类似Windows快捷方式
 2.软链接拥有自己的I节点和Block块，但是数据块中只保存原文件的文件名和I节点号
      并没有实际的文件数据
 3.lrwxrwrwx  l 软链接
       软链接文件权限都为 rwxrwxrwx
 4.修改任意文件，另一个都改变
 5.删除原文件，软链接不能使用

 温馨提示:在创建软链接的时候必须写绝对路径，	除非是在同一目录下

 文件搜索命令
  a.文件搜索命令locate
  b.命令搜索命令whereis与which
  c.文件搜索命令find
  d.字符串搜索命令grep
  e.find 与 grep 的区别

  1.locate 文件名(只能按文件名搜索)
  在后台数据库中安文件名搜索,搜索速度更快，
  /var/lib/mlocate (一天更新一次)
  locate命令所搜索的后台数据库
  updatedb
    更新数据库

  /etc/updatedb.conf         配置文件
  PRUNE_BIND_MOUNTS = "yes"  开启搜索限制
  PRUNEFS=                   搜索时，不搜索的文件系统
  PRUNENAMES                 搜索时，不搜索的文件类型
  PRUNEPATHS                 搜索时，不搜索的路劲

  搜索命令的命令whereis
  whereis 命令名       拓展  whoami  whatis
  搜素命令所在路径及帮助文档所在位置
  选项
    -b:  只查找可执行文件
    -m:  只查找帮助文件


 PATH环境变量
   概念:定义的是系统搜索命令的路径
   可以通过 echo $PATH 命令查看

 find 命令
 find [搜索范围][搜索条件]    <!--!---find / -name "redis*"-->
 find / -name install.log
 避免大范围搜索，会非常耗费系统资源
 find是在系统当中搜索符合条件的文件名。如果需要匹配，使用通配符
          匹配，通配符是完全匹配
 find /root -iname install.log    不区分大小写
 find /root -user root            按照所有着搜索
 find /root -nouser               查找没有所有者的文件

 find /var/log/ -mtime +10        查找10天前修改的文件
                       -10        10天内修改的文件
                        10        10天当天修改的文件
                 atime            文件访问时间
                 ctime            改变文件属性
                 mtime            修改文件内容
 find . -size 25k                 查找文件大小是25kb的文件
              -25k                小于25kb的文件
              +25k                大于25kb的文件
 find  . -inum 262422             查找i节点是262422d的文件
.可以用当前目录代替

find /etc -size +20k -a -size -50k 查找/etc/目录下，大于20kb并且小于50kb的文件

-a and  逻辑与，两个条件都满足
-o or   逻辑或,两个条件满足一个即可

find /etc -size +20 -a -size -50k -exrc ls -lh {} \;
查找/etc/目录下，大于20kb并且小于50kb的文件，并显示详细信息
-exec/-ok 命令 {} \;对搜索结果执行操作

搜索字符串命令grep
grep [选项] 字符串 文件名
在文件当中匹配符合条件的字符串
选项:
	-i  忽略大小写
	-v  排除指定字符串

	帮助命令
	man
	man的级别
	1. :   查看命令的帮助
	2. :   查看可被内核调用的函数的帮助
	3. :   查看函数和函数库的帮助
	4. :   查看特殊文件的帮助 (主要是dev目录下的文件)
	5. :   查看配置文件的帮助
	6. :   查看游戏的帮助
	7. :   查看其它杂项的帮助
	8. :   查看系统管理员可用命令的帮助
	9. :   查看和内核相关文件的帮助

	man -f 查看命令的帮助级别  作用和whatis
	man -k 查看系统中所有包含所输入的命令 相当于 apropos

	其它帮助命令
	命令 --help
	shell内部命令帮助
	help shell  内部命令        获取shell内部命令
	info 命令
	- 回车  进入子帮助页面(带有*号标记)
	-u     进入上层页面
	-n     进入下一个帮助小节
	-p     进入上一个帮助小节
	-q     退出

	压缩命令
	常用压缩格式 ：.zip .gz .bz2
	常用压缩格式 : .tar.gz  .tar.bz2
	 zip格式压缩 (和window通用)
	 格式 zip 压缩文件名 源文件         (压缩文件)
	     zip -r 压缩文件名 源目录   (压缩目录)
	     unzip  解压缩.zip文件

	.gzip  源文件
	压缩为.gz格式的压缩文件,源文件会消失
	,gzip -c 源文件 > 压缩文件
	压缩为.gz格式,源文件保留
	.gzip -r 目录
	压缩目录下所有的子文件，但是不能压缩目录
	gzip -d 或者(gunzip) 解压缩

 .bz2格式压缩
 bzip2  源文件
 bzip -k 保留源文件
 不能压缩目录
 解压缩同gzip

 打包命令tar
 tar -cvf  打包文件名 源文件
 tar -xvf  解打包文件名 源文件

 tar -zcvf 压缩包名.tar.gz 源文件
 tar -tcvf 查看压缩包名.tar.gz 源文件
 tar -zxvf 解压缩.tar.gz格式
 tar -jcvf 压缩包名.tar.bz2 源文件      前面加绝对路径可以指定位置 压缩多个文件，文件名以空格分隔 例：tar -zcvf /tmp/test.tar.gz jp anaconda-ks.cfg
 tar -jxvf 解压缩.tar.bz2格式                后加 -C指定位置

 选项:
    -c : 打包
    -v : 显示过程
    -f : 指定打包后的文件名

 	关机和重启命令
 	shutdown [选项] 时间
 	选项:
 	-c : 取消前一个关机命令
 	-h : 关机
  -r : 重启
  ctrl + c 终止	退出
  命令后+& 	表示该命令在后台运行
  应避免用shutdown -h

2.其他关机命令
halt   poweroff  init0    不推荐使用   不安全
3.其他重启命令
reboot(较安全，适时可代替shutdown)   init6(不推荐)

系统运行级别
0  关机
1  单用户              (类似window安全模式)
2  不完全多用户,不含NFS服务
3  完全多用户
4  未分配
5  图形界面
6  重启

	 cat/etc/inittab   修改系统默认运行级别
	 runlevel          查询系统运行级别
	 logout            退出登录界面
	 linux中 大写 X 代表图形界面


	 其他常用命令
	 a.挂载命令
	 b.用户登录查看和用户交互命令

	 1.查询与自动挂载
	 mount       查询系统中已经挂载的设备
	 mount -a    依据配置文件/etc/fstab 的内容，自动挂载
	 mount [-t 文件系统] [-o 特殊选项]  设备文件名 挂载点
	 选项:
	 -t 文件系统 : 加入文件系统类型类指定挂载的类型，可以在ex3,ex4,iso9660等文件系统
	 -o 特殊选项 : 可以指定挂载的额外选项

	 linux中所有脚本必须以 #!/bin/bash  开始

	 参数                                 说明
atime/noatime       更新访问时间/不更新访问时间。访问分区文件时，是否更新文件的访问时间，默认为更新
async/sync          异步/同步，默认为异步
auto/noauto         自动/手动，mount -a 命令执行时，是否会自动安装/etc/fstab文件内容挂载，默认为自动
defaults            定义默认值，相当于rw,suid,dev,exec,auto,nouser,async
exec/noexec         执行/不执行，设定是否允许在文件系统中执行可执行文件,默认是exec允许
remount             重新挂载已经挂载的文件系统,一般用于指定修改特殊权限
rw/ro               读写/只读,文件系统挂载时,是否具有读写权限,默认是rw
suid/nosuid         具有/不具有 SUID 权限,设定文件系统是否具有SUID和SGID的权限，默认是具有
user/nouser         允许/不允许普通用户挂载,设定文件系统是否允许普通用户挂载，默认是不允许，只有root可以挂载分区
usrquota            写入代表文件系统支持用户磁盘配额，默认不支持
grpquota            写入代表文件系统支持组磁盘配额，默认不支持

 重新挂载/boot分区，并使用noexec权限
 mount -o remount,noexec /home (因为home 是默认挂载的，所以可以直接这样写,如果是挂载光盘，那么救你需要写全)
 cd /home
 vi hello.sh
 chmod 755 hello.sh
 ./hello.sh
 mount -o remount,exec
 /home

 挂载光盘
 ！ 在选择镜像文件时，设备状态中已连接的选项一定要记得打钩
 建立挂载系统  mkdir /mnt/cdrom
 挂载光盘         mount -t iso9660 /dev/sr0/mnt/cdrom
 		  (简写)	mount /dev/sr0/mnt/cdrom/

 卸载命令
 umount 设备文件名或挂载点
 如：umount/mut/cdrom	(卸载时必须先跳出光盘的盘符)

 挂载u盘
 fdisk -l(查看系统已经识别的硬盘)
 目的是查看u盘的盘符名称 一般是sdb1
 mount -t vfat /dev/sdb1/mnt/usb/
 vfat 代表windows中的fat32 只支持不超过4个G的单个文件
 !linux默认是不支持NTFS文件系统的(一般不使用)

 查看登录用户信息
 W      用户名
 USER   登录的用户名
 TTY    登录终端
 FROM   从哪个IP地址登录
 LOGIN  登录时间
 IDLE   用户闲置时间
 JCPU   指的是和该终端连接的所有进程占用的时间。这个事件里并不包括过去的后台作业时间，但却包括当前正在运行的后台作业所占用的时间;
 PCPU   是指当前进程所占用的时间
 WHAT   当前正在运行的命令
 who    类似W 主要是看资源消耗
 last   查询当前登录和过去登录的用户信息
 				默认是读取/var/log/wtmp文件数据
 	输出    用户名,登录终端,登录IP，登录时间，退出时间(在线时间)
lastlog 查看所有用户的最后一次时间
                默认是读取/var/log/lastlog文件内容
               与last类似

    shell基础
一 shell概述
二 脚本的执行方式
三 Bash的基本功能
1.shell是个命令行解释器。它为用户提供了一个向Linux内核发送请求以便运行程序的界面系统级程序，用户可以用shell来启动，挂起，停止甚至编写一些程序。
         它还是一个功能相当强大的编程语言，易编写，易调试，灵活性较强。shell是解释执行的脚本语言，在shell中可以直接调用linux系统命令.
    shell的分类
    Bourne shell : 从1979起Ubix就开始使用Bourne Shell,Bourne Shell的主文件名为sh.(基本上已经淘汰了)
       C shell   ：C shell主要在BSD版的Unix系统中使用，其语法和C语言相类似而得名。
  Shell的两种主要语法类型有bourne和C,这两种语法彼此不兼容。bourne家族主要包括sh,ksh,bash,psh,zsh
  c家族主要包括：csh,tcsh.
  bash：bash与sh兼容，现在使用的linux就是使用bash作为用户的基本shell
  在 /etc/shells文件夹中可以查看兼容的有哪些版本
  exit  退出  echo $SHELL  查看当前运行的是哪种shell

  脚本的执行方式
  1.echo 输出命令 里面不能有!（感叹号）
  echo [选项] [输出内容]
  选项:
  | -e:支持反斜线控制的字符转换
  控制字符        作用
  \a         输出警告音
  \b         退格键，也就是向左删除键
  \n         换行键
  \r         回车键
  \t         制表符，也就是Table键
  \v         垂直制表符
  \Onnn      按照八进制ASCII码表输出字符，其中0为数字零，nnn是三位八进制数
  \xhh       按照十六进制ASCII码表输出字符,其中hh是两位十六进制数
  echo -e "\e[1;31m 嫁人就要嫁凤姐 \e[0m"  其中1;表示开启，0表示关闭
  输出颜色
  #30吗= 黑色，#31m=红色,#32m=绿色,#33m=黄色,#34m=蓝色,#35m=洋红,#36m=青色，37m=白色

 bash的基本功能
 1.命令别名与快捷键  ( 命令别名 == 人的小名 )
 2.历史命令
 3.输出重定向
 4.多命令顺序执行
 5.Shell中特殊符号

 alias  查看系统中所有的命令别名
 alias 别名 ='原命令'  设定命令别名 只能暂时生效

 别名永久生效与删除别名
 vi ~/.bashrc  写入环境变量配置文件
 unalias  别名 (临时删除)
 删除别名
 source +文件名    把文件重新执行一遍

 命令生效顺序
 第一顺位执行用绝对路径或相对路径执行的命令
 第二顺位执行别名
 第三顺位执行bash的内部命令
 第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令

 常用快捷键
 ctrl + c    强制终止当前命令
 ctrl + l    清屏
 ctrl + a    光标移动到命令行首
 ctrl + e    光标移动到命令行尾
 ctrl + u    从光标所在位置删除到行首
 ctrl + z    把命令放入后台
 ctrl + r    在历史命令中搜索

 历史命令
 history [选项] [历史命令保存文件]
 选项:
  | -c : 清空历史命令
  | -w ：把缓存中的历史命令写入历史命令保存文件~/.bash_history
历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中进行修改
历史命令的调用
使用上下箭头调用以前的历史命令
使用"!n"重复执行第n条历史命令
使用"!!"重复执行上一条命令
使用"!字符串" 重复执行最后一条以该字符串开头的命令

命令和文件的补全    按table键

输出重定向
1.标准输入输出
设备         设备文件名         文件描述符         类型
键盘          /dev/stdin       0         标准输入
显示器      /dev/sdtout      1         标准输出
显示器     /dev/sdterr       2         标准错误输出

输出重定向
类型                                        符号                                         作用
标准输出重定向                 命令 > 文件             以覆盖的方式,把命令的正确输出输出到指定的文件或设备当中
										   命令 >>文件 			以追加的方式,把命令的正确输出输出到指定的文件或设备当中
标准错误输出重定向      错误命令2 > 文件      以覆盖的方式,把命令的正确输出输出到指定的文件或设备当中 （>号左右不能有空格）
									   错误命令2 >>文件      以追加的方式,把命令的正确输出输出到指定的文件或设备当中
正确输出和错误输出     命令 > 文件 2>&1    以覆盖的方式,把正确输出和错误输出都保存到用一个文件中
同时保存						 命令 >> 文件 2>&1 		以追加的方式,把正确输出和错误输出都保存到用一个文件中
			             	命令 &> 文件				以覆盖的方式,把正确输出和错误输出都保存到用一个文件中
			             	命令 &>> 文件		    以追加的方式,把正确输出和错误输出都保存到用一个文件中
			                        命令>>文件1 2>>文件2 把正确的输出追加到文件1中,把错误的输出追加到文件2中
			            ls &>/dev/null     /dev/null  是个黑洞  类似于垃圾袋  写入的数据就没有了
输入重定向
wc [选项][文件名]
选项:
 |-c 统计字节数
 |-w 统计单词数
 |-l 统计行数
命令<文件把文件作为命令的输入
命令<<标识符
...
标识符把标识符之间的内容作为命令的输入

管道符
多命令顺序执行
多命令执行符                     格式                          作用
     ;            命令1:命令2          多个命令顺序执行,命令之间没有任何逻辑联系
     &&           命令1 && 命令2       逻辑与   当命令1正确执行,则命令2才会执行   当命令1执行不正确,则命令2不会执行
     ||           命令1 || 命令2				逻辑或  当命令1执行不正确,则命令2才会执行  当命令1正确执行,则命令2不会执行
 管道符
 命令1 | 命令2    命令1的正确输出作为命令2的操作对象
 more 分屏显示
 netstat -an | grep ESTABLISHED  | WC -l   查询有几个人连接服务器

 通配符

二 文件处理命令

三 链接命令
